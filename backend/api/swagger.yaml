openapi: 3.0.1
info:
  title: Brain.AI
  description: API for Brain.ai
  contact:
    email: songsichen@g.ucla.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0-oas3
servers:
  - url: https://virtserver.swaggerhub.com/shsssc/brain.ai/1.0.0
tags:
  - name: User
    description: user & session
  - name: Data
    description: Manage Data
  - name: Model
    description: Manage Models
  - name: Tasks
    description: Manage Tasks
paths:
  /user:
    post:
      tags:
        - User
      summary: createUser
      description: |
        new user sign up
      operationId: createUser
      parameters:
        - name: email
          in: query
          description: password of user
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: abc@xyz.com
        - name: password
          in: query
          description: password of user
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: mysuperpassword!#@
      responses:
        "200":
          description: successfully created user
        "400":
          description: bad input parameter
        "409":
          description: conflict username
      x-swagger-router-controller: User
  /session:
    post:
      tags:
        - User
      summary: user login
      description: |
        new user log in
      operationId: login
      parameters:
        - name: email
          in: query
          description: password of user
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: abc@xyz.com
        - name: password
          in: query
          description: password of user
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: mysuperpassword!#@
      responses:
        "200":
          description: successfully login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: bad input parameter
        "401":
          description: bad credential
      x-swagger-router-controller: User
    delete:
      tags:
        - User
      summary: user log out
      description: |
        authorized user log out
      operationId: logOut
      parameters:
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully log out
        "400":
          description: bad input parameter
        "401":
          description: bad token
      x-swagger-router-controller: User
  /data:
    get:
      tags:
        - Data
      summary: list all data the user owns
      description: |
        list all data the user owns
      operationId: getData
      parameters:
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully list data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
                x-content-type: application/json
        "400":
          description: bad input parameter
      x-swagger-router-controller: Data
    put:
      tags:
        - Data
      summary: rename data
      description: "rename the uploaded data \n"
      operationId: modifyData
      parameters:
        - name: name
          in: query
          description: name of the dataset
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: IMAGE_SET_1
        - name: data_id
          in: query
          description: data id of data to rename
          required: true
          style: form
          explode: true
          schema:
            type: integer
            example: 123
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully renamed the data
        "400":
          description: bad input parameter
        "401":
          description: bad token
      x-swagger-router-controller: Data
    post:
      tags:
        - Data
      summary: upload new data
      description: |
        upload data
      operationId: uploadData
      parameters:
        - name: name
          in: query
          description: name of the dataset
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: IMAGE_SET_1
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully uploaded the data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: bad input parameter
        "401":
          description: bad token
      x-swagger-router-controller: Data
    delete:
      tags:
        - Data
      summary: remove data the user uploaded
      description: |
        remove data the user uploaded
      operationId: deleteData
      parameters:
        - name: data_id
          in: query
          description: data id of data to delete
          required: true
          style: form
          explode: true
          schema:
            type: integer
            example: 123
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully removed the data
        "400":
          description: bad input parameter
        "401":
          description: bad token
      x-swagger-router-controller: Data
  /models:
    get:
      tags:
        - Model
      summary: list all Models the user can see
      description: |
        list all Models the user owns or is shared
      operationId: getModel
      parameters:
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully list models
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_3'
                x-content-type: application/json
        "400":
          description: bad input parameter
      x-swagger-router-controller: Model
    put:
      tags:
        - Model
      summary: change model the user owns
      description: |
        modify model the user created
      operationId: modifyModel
      parameters:
        - name: model_id
          in: query
          description: id of model to delete
          required: true
          style: form
          explode: true
          schema:
            type: integer
            example: 123
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
        - name: name
          in: query
          description: new name of model
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: best model ever
        - name: shared
          in: query
          description: new share status of model
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        "200":
          description: successfully updated the model
        "400":
          description: bad input parameter
        "401":
          description: bad token
      x-swagger-router-controller: Model
    delete:
      tags:
        - Model
      summary: remove model the user owns
      description: |
        remove model the user created
      operationId: deleteModel
      parameters:
        - name: model_id
          in: query
          description: id of model to delete
          required: true
          style: form
          explode: true
          schema:
            type: integer
            example: 123
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully removed the model
        "400":
          description: bad input parameter
        "401":
          description: bad token
      x-swagger-router-controller: Model
  /task:
    get:
      tags:
        - Tasks
      summary: list all tasks the user owns
      description: |
        list all tasks the user owns
      operationId: getTask
      parameters:
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully listed task
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_4'
                x-content-type: application/json
        "400":
          description: bad input parameter
      x-swagger-router-controller: Tasks
    put:
      tags:
        - Tasks
      summary: stop a task that is pending or running
      description: |
        stop task the user created. The task must be pending or running.
      operationId: stopTask
      parameters:
        - name: task_id
          in: query
          description: id of task to stop
          required: true
          style: form
          explode: true
          schema:
            type: integer
            example: 29
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully stopped the task
        "400":
          description: bad input parameter
        "401":
          description: bad token
        "403":
          description: task is not stoppable
      x-swagger-router-controller: Tasks
    post:
      tags:
        - Tasks
      summary: create new task
      description: |
        generate new task for training/prediction/preview
      operationId: createTask
      parameters:
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
        - name: type
          in: query
          description: the type of the task
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: training
            enum:
              - training
              - prediction
              - preview
        - name: data
          in: query
          description: data id for the task
          required: true
          style: form
          explode: true
          schema:
            type: integer
            example: 33
        - name: model
          in: query
          description: model id for the prediction task
          required: false
          style: form
          explode: true
          schema:
            type: integer
            example: 5
      responses:
        "200":
          description: successfully created task
        "400":
          description: bad input parameter
      x-swagger-router-controller: Tasks
    delete:
      tags:
        - Tasks
      summary: remove task from tasklist
      description: |
        remove task the user created. The task must **not** be running.
      operationId: deleteTask
      parameters:
        - name: task_id
          in: query
          description: id of task to delete
          required: true
          style: form
          explode: true
          schema:
            type: integer
            example: 29
        - name: session_token
          in: query
          description: session token of a user session
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
      responses:
        "200":
          description: successfully removed the task
        "400":
          description: bad input parameter
        "401":
          description: bad token
      x-swagger-router-controller: Tasks
components:
  schemas:
    inline_response_200:
      type: object
      properties:
        user_token:
          type: string
          description: the token that authorize the user
          example: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
        user_id:
          type: integer
          description: the id of the authorized user
          example: 15
      example:
        user_token: 22d40d3978dd7945bbfcc0bc32a078e2129a253a97cbb04cbb71bc8c506aa9c5
    inline_response_200_1:
      type: object
      properties:
        data_id:
          type: integer
          description: the id of data
          example: 1
        data_name:
          type: string
          description: the user-defined name of data
          example: T2_FLAIR
        preview:
          type: string
          description: the preview image of dataset
          example: http://aaa.com/image.jpg
        data_type:
          type: string
          example: training
          enum:
            - training
            - prediction
      example:
        preview: http://aaa.com/image.jpg
        data_name: T2_FLAIR
        data_id: 1
        data_type: training
    inline_response_200_2:
      type: object
      properties:
        data_id:
          type: integer
          description: the id of the uploaded data
          example: 3
        upload_url:
          type: string
          description: the url for data upload
          example: http://upload_here.com
      example:
        data_id: 3
        upload_url: http://upload_here.com
    inline_response_200_3:
      type: object
      properties:
        model_id:
          type: integer
          description: the id of data
          example: 1
        model_name:
          type: string
          description: the user-defined name of data
          example: T2_FLAIR
        preview:
          type: string
          description: the preview image of dataset
          example: http://aaa.com/image.jpg
        shared:
          type: boolean
          description: whether the model is publically avaliable
          example: false
      example:
        preview: http://aaa.com/image.jpg
        shared: false
        model_name: T2_FLAIR
        model_id: 1
    inline_response_200_4:
      type: object
      properties:
        task_id:
          type: integer
          description: the id of task
          example: 1
        task_status:
          type: string
          description: the status of the task
          example: pending
          enum:
            - pending
            - inProgress
            - stopped
            - success
            - error
        data:
          type: integer
          description: the id of the data associated with the task
          example: 3
        task_type:
          type: string
          description: the type of the task
          example: training
          enum:
            - training
            - prediction
            - preview
      example:
        task_status: pending
        data: 3
        task_id: 1
        task_type: training
